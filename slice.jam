import type : register ;
import generators : register-standard ;
import type ;
import feature : feature ;
import scanner ;
import toolset ;

type.register SLICE : ice ;

feature allow-ice : no yes ;
feature ice-visibility : public hidden ;

class slice-scanner : common-scanner
{
    rule pattern ( )
    {
        return "^[ \t]*#[ \t]*include[ ]*[<\"]([^>\"]*)[>\"]" ;
    }
}

scanner.register slice-scanner : include ;

type.set-scanner SLICE : slice-scanner ;

generators.register-standard slice.slice2cpp : SLICE : CPP H ;

toolset.flags slice.slice2cpp INCLUDES <include> ;
toolset.flags slice.slice2cpp DLLEXPORT <ice-visibility>public : --dll-export JAM_DLL_PUBLIC ;
toolset.flags slice.slice2cpp ALLOWICE <allow-ice>yes : --ice ;

actions slice.slice2cpp
{
  slice2cpp -I"$(INCLUDES)" --checksum --output-dir $(1[1]:D) $(2) $(DLLEXPORT) $(ALLOWICE[1])
}

IMPORT $(__name__) : slice.slice2cpp : : slice.slice2cpp ;

